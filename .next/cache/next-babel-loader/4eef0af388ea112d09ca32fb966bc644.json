{"ast":null,"code":"var _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/components/Feed.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport Card from '../components/Card';\nimport * as actions from '../redux/actions';\nvar Wrapper = styled.div.withConfig({\n  displayName: \"Feed__Wrapper\",\n  componentId: \"he9v8d-0\"\n})([\"display:flex;flex-wrap:wrap;justify-content:space-between;@media (max-width:900px){flex-direction:column;}\"]);\n_c = Wrapper;\n\nfunction Feed(_ref) {\n  _s();\n\n  var _this = this;\n\n  var items = _ref.items,\n      isFetching = _ref.isFetching,\n      fetchItems = _ref.fetchItems;\n  var noFetch = useRef(false);\n  useEffect(function () {\n    var scrollHeight = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);\n    document.addEventListener('scroll', foo);\n\n    function foo() {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        console.log('yo');\n\n        if (!noFetch.current) {\n          fetchItems({\n            reset: false\n          });\n          noFetch.current = true;\n          setTimeout(function () {\n            noFetch.current = false;\n          }, 2000);\n        }\n      }\n    }\n\n    return function () {\n      document.removeEventListener('scroll', foo);\n    };\n  });\n\n  var Items = function Items() {\n    return __jsx(React.Fragment, null, items.map(function (item, id) {\n      return __jsx(Card, {\n        key: id,\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 52\n        }\n      });\n    }));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(Items, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), isFetching ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }\n  }, \"Loading....\") : null);\n}\n\n_s(Feed, \"PqVCiIqhLd992ii4mUZi0xw+dxo=\");\n\n_c2 = Feed;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    items: state.items,\n    isFetching: state.isFetching\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchItems: function fetchItems(x) {\n      return dispatch(actions.fetchItems(x));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Feed\");","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/components/Feed.js"],"names":["React","useEffect","useRef","styled","connect","Card","actions","Wrapper","div","Feed","items","isFetching","fetchItems","noFetch","scrollHeight","Math","max","document","body","documentElement","offsetHeight","clientHeight","addEventListener","foo","window","innerHeight","scrollY","console","log","current","reset","setTimeout","removeEventListener","Items","map","item","id","mapStateToProps","state","mapDispatchToProps","dispatch","x"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\n\nimport Card from '../components/Card'\nimport * as actions from '../redux/actions'\n\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-wrap:wrap;\n    justify-content:space-between;\n    @media (max-width: 900px){\n        flex-direction:column;\n    }\n`;\n\n\n\nfunction Feed({ items, isFetching, fetchItems }) {\n\n    const noFetch = useRef(false)\n\n\n    useEffect(() => {\n        let scrollHeight = Math.max(\n            document.body.scrollHeight, document.documentElement.scrollHeight,\n            document.body.offsetHeight, document.documentElement.offsetHeight,\n            document.body.clientHeight, document.documentElement.clientHeight\n        )\n\n        document.addEventListener('scroll', foo)\n        function foo() {\n\n            if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n                console.log('yo')\n                if (!noFetch.current) {\n                    fetchItems({ reset: false })\n                    noFetch.current = true;\n                    setTimeout(() => { noFetch.current = false }, 2000)\n                }\n\n            }\n        }\n\n        return () => {\n            document.removeEventListener('scroll', foo)\n        }\n    })\n\n    const Items = () => <>{items.map((item, id) => <Card key={id} item={item} />)}</>\n\n    return (\n        <React.Fragment>\n            <Wrapper>\n                <Items />\n            </Wrapper>\n            {isFetching ? <div>Loading....</div> : null}\n        </React.Fragment>\n    )\n}\n\n\n\n\nconst mapStateToProps = (state) => ({\n    items: state.items,\n    isFetching: state.isFetching\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchItems: (x) => dispatch(actions.fetchItems(x))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed)\n\n\n"]},"metadata":{},"sourceType":"module"}