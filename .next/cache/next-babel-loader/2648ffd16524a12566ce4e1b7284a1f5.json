{"ast":null,"code":"export var SET_FILTER = 'SET_FILTER';\nexport var SET_WORD = 'SET_WORD';\nexport var SET_ORDER = 'SET_ORDER';\nexport var SET_IS_FETCHING = 'SET_IS_FETCHING';\nexport var SET_IS_NOT_FETCHING = 'SET_IS_NOT_FETCHING';\nexport var ADD_ITEMS = 'ADD_ITEMS';\nexport var RESET_ITEMS = 'RESET_ITEMS';\nexport var SET_FETCHING_ERROR = 'SET_FETCHING_ERROR';\nvar page_size = 20;\nvar ERA = '2000-01-01,2021-12-31';\nvar URL = 'https://api.rawg.io/api/games?';\nvar page = 1;\nexport function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    filter: filter\n  };\n}\nexport function setWord(word) {\n  return {\n    type: SET_WORD,\n    word: word\n  };\n}\nexport function setOrder(order) {\n  return {\n    type: SET_ORDER,\n    order: order\n  };\n}\nexport function setIsFetching() {\n  return {\n    type: SET_IS_FETCHING\n  };\n}\nexport function setIsNotFetching() {\n  return {\n    type: SET_IS_NOT_FETCHING\n  };\n}\nexport function addItems(items) {\n  return {\n    type: ADD_ITEMS,\n    items: items\n  };\n}\nexport function resetItems(items) {\n  return {\n    type: RESET_ITEMS,\n    items: items\n  };\n}\nexport function setFetchingError(error) {\n  return {\n    type: SET_FETCHING_ERROR,\n    error: error\n  };\n} ////////////////////////////////////////       ASYNC ACTIONS\n\nexport function fetchItems(_ref) {\n  var _ref$reset = _ref.reset,\n      reset = _ref$reset === void 0 ? true : _ref$reset,\n      word = _ref.word,\n      order = _ref.order,\n      filter = _ref.filter;\n  if (reset) page = 1;\n  var requestUrl = URL + 'page_size=' + page_size + '&page=' + page + '&dates=' + ERA;\n  if (word) requestUrl = requestUrl + '&search=' + word;\n  if (order) requestUrl = requestUrl + '&ordering=' + order;\n  if (filter) requestUrl = requestUrl + '&platforms=' + filter;\n  if (word === undefined) word = null;\n  return function (dispatch) {\n    console.log('WORD', order);\n    if (order) dispatch(setOrder(order));\n    dispatch(setWord(word));\n    if (filter) dispatch(setFilter(filter));\n    dispatch(setIsFetching());\n    dispatch(setFetchingError(null));\n    fetch(requestUrl).then(function (res) {\n      if (!res.ok) {\n        console.log(res);\n        throw res.status;\n      }\n\n      dispatch(setIsNotFetching());\n      return res.json();\n    }).then(function (res) {\n      page++;\n\n      if (reset) {\n        dispatch(resetItems(res.results));\n      } else {\n        dispatch(addItems(res.results));\n      }\n    })[\"catch\"](function (e) {\n      console.log('ERROR_CATCHED: ', e);\n      dispatch(setFetchingError(e));\n      dispatch(setIsNotFetching());\n    });\n  };\n}","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/redux/actions.js"],"names":["SET_FILTER","SET_WORD","SET_ORDER","SET_IS_FETCHING","SET_IS_NOT_FETCHING","ADD_ITEMS","RESET_ITEMS","SET_FETCHING_ERROR","page_size","ERA","URL","page","setFilter","filter","type","setWord","word","setOrder","order","setIsFetching","setIsNotFetching","addItems","items","resetItems","setFetchingError","error","fetchItems","reset","requestUrl","undefined","dispatch","console","log","fetch","then","res","ok","status","json","results","e"],"mappings":"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","sourcesContent":["export const SET_FILTER = 'SET_FILTER'\nexport const SET_WORD = 'SET_WORD'\nexport const SET_ORDER = 'SET_ORDER'\nexport const SET_IS_FETCHING = 'SET_IS_FETCHING'\nexport const SET_IS_NOT_FETCHING = 'SET_IS_NOT_FETCHING'\nexport const ADD_ITEMS = 'ADD_ITEMS'\nexport const RESET_ITEMS = 'RESET_ITEMS'\nexport const SET_FETCHING_ERROR = 'SET_FETCHING_ERROR'\n\nconst page_size = 20\nconst ERA = '2000-01-01,2021-12-31'\nconst URL = 'https://api.rawg.io/api/games?'\nlet page = 1\n\n\nexport function setFilter(filter) {\n    return {\n        type: SET_FILTER,\n        filter\n    }\n}\nexport function setWord(word) {\n    return {\n        type: SET_WORD,\n        word\n    }\n}\nexport function setOrder(order) {\n    return {\n        type: SET_ORDER,\n        order\n    }\n}\nexport function setIsFetching() {\n    return {\n        type: SET_IS_FETCHING\n    }\n}\nexport function setIsNotFetching() {\n    return {\n        type: SET_IS_NOT_FETCHING\n    }\n}\nexport function addItems(items) {\n    return {\n        type: ADD_ITEMS,\n        items\n    }\n}\nexport function resetItems(items) {\n    return {\n        type: RESET_ITEMS,\n        items\n    }\n}\nexport function setFetchingError(error) {\n    return {\n        type: SET_FETCHING_ERROR,\n        error\n    }\n}\n\n\n\n////////////////////////////////////////       ASYNC ACTIONS\n\n\nexport function fetchItems({ reset = true, word, order, filter }) {\n    if (reset) page = 1;\n\n    let requestUrl = URL + 'page_size=' + page_size + '&page=' + page + '&dates=' + ERA\n\n    if (word) requestUrl = requestUrl + '&search=' + word\n    if (order) requestUrl = requestUrl + '&ordering=' + order\n    if (filter) requestUrl = requestUrl + '&platforms=' + filter\n\n    if (word === undefined) word = null\n\n\n    return (dispatch) => {\n        console.log('WORD', order)\n        if (order) dispatch(setOrder(order))\n        dispatch(setWord(word))\n        if (filter) dispatch(setFilter(filter))\n        dispatch(setIsFetching())\n        dispatch(setFetchingError(null))\n        fetch(requestUrl)\n            .then(res => {\n                if (!res.ok) { console.log(res); throw res.status }\n                dispatch(setIsNotFetching())\n                return res.json()\n            })\n            .then(res => {\n                page++;\n                if (reset) {\n                    dispatch(resetItems(res.results))\n                } else {\n                    dispatch(addItems(res.results))\n                }\n            })\n            .catch(e => {\n                console.log('ERROR_CATCHED: ', e)\n                dispatch(setFetchingError(e))\n                dispatch(setIsNotFetching())\n            })\n\n\n    }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}