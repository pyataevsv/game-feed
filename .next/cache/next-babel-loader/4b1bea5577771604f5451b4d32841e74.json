{"ast":null,"code":"var _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/pages/game/[slug].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport store from '../../redux/store';\nimport Slider from '../../components/Slider';\n\nconst Game = () => {\n  const {\n    0: slides,\n    1: setSlides\n  } = useState(null);\n  const {\n    0: {\n      name\n    },\n    1: setDetails\n  } = useState({\n    name: ''\n  });\n  const router = useRouter();\n  const {\n    slug\n  } = router.query; //screenshots\n\n  useEffect(() => {\n    if (slug) {\n      const scrURL = 'https://api.rawg.io/api/games/' + slug + '/screenshots';\n      fetch(scrURL).then(x => {\n        if (!x.ok) throw new Error(x);\n        console.log(x);\n        return x.json();\n      }).then(x => setSlides(x.results)).catch(x => console.log(x));\n      return () => {};\n    }\n  }, []); //screenshots\n\n  useEffect(() => {\n    if (slug) {\n      const scrURL = 'https://api.rawg.io/api/games/' + slug;\n      fetch(scrURL).then(x => {\n        if (!x.ok) throw new Error(x);\n        console.log(x);\n        return x.json();\n      }).then(x => setDetails(x)).catch(x => console.log(x));\n      return () => {};\n    }\n  }, []);\n  console.log(details);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, name), __jsx(Slider, {\n    slides: slides,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Game;","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/pages/game/[slug].js"],"names":["React","useEffect","useState","useRouter","store","Slider","Game","slides","setSlides","name","setDetails","router","slug","query","scrURL","fetch","then","x","ok","Error","console","log","json","results","catch","details"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAIA,MAAMC,IAAI,GAAG,MAAM;AAEf,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAA,OAAC;AAAEO,MAAAA;AAAF,KAAD;AAAA,OAAWC;AAAX,MAAyBR,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAvC;AAEA,QAAME,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB,CANe,CASf;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,IAAJ,EAAU;AACN,YAAME,MAAM,GAAG,mCAAmCF,IAAnC,GAA0C,cAAzD;AAEAG,MAAAA,KAAK,CAACD,MAAD,CAAL,CACKE,IADL,CACUC,CAAC,IAAI;AACP,YAAI,CAACA,CAAC,CAACC,EAAP,EAAW,MAAM,IAAIC,KAAJ,CAAUF,CAAV,CAAN;AACXG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACA,eAAOA,CAAC,CAACK,IAAF,EAAP;AACH,OALL,EAMKN,IANL,CAMUC,CAAC,IAAIT,SAAS,CAACS,CAAC,CAACM,OAAH,CANxB,EAOKC,KAPL,CAOWP,CAAC,IAAIG,OAAO,CAACC,GAAR,CAAYJ,CAAZ,CAPhB;AASA,aAAO,MAAM,CAEZ,CAFD;AAGH;AAEJ,GAlBQ,EAkBN,EAlBM,CAAT,CAVe,CA+Bf;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,IAAJ,EAAU;AACN,YAAME,MAAM,GAAG,mCAAmCF,IAAlD;AAEAG,MAAAA,KAAK,CAACD,MAAD,CAAL,CACKE,IADL,CACUC,CAAC,IAAI;AACP,YAAI,CAACA,CAAC,CAACC,EAAP,EAAW,MAAM,IAAIC,KAAJ,CAAUF,CAAV,CAAN;AACXG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACA,eAAOA,CAAC,CAACK,IAAF,EAAP;AACH,OALL,EAMKN,IANL,CAMUC,CAAC,IAAIP,UAAU,CAACO,CAAD,CANzB,EAOKO,KAPL,CAOWP,CAAC,IAAIG,OAAO,CAACC,GAAR,CAAYJ,CAAZ,CAPhB;AASA,aAAO,MAAM,CAEZ,CAFD;AAGH;AAEJ,GAlBQ,EAkBN,EAlBM,CAAT;AAoBAG,EAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,IAAL,CADG,EAEH,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEF,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,CAAP;AAIH,CA1DD;;AA4DA,eAAeD,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport store from '../../redux/store'\nimport Slider from '../../components/Slider'\n\n\n\nconst Game = () => {\n\n    const [slides, setSlides] = useState(null)\n    const [{ name }, setDetails] = useState({ name: '' })\n\n    const router = useRouter()\n    const { slug } = router.query\n\n\n    //screenshots\n    useEffect(() => {\n        if (slug) {\n            const scrURL = 'https://api.rawg.io/api/games/' + slug + '/screenshots'\n\n            fetch(scrURL)\n                .then(x => {\n                    if (!x.ok) throw new Error(x)\n                    console.log(x)\n                    return x.json()\n                })\n                .then(x => setSlides(x.results))\n                .catch(x => console.log(x))\n\n            return () => {\n\n            }\n        }\n\n    }, [])\n\n\n    //screenshots\n    useEffect(() => {\n        if (slug) {\n            const scrURL = 'https://api.rawg.io/api/games/' + slug\n\n            fetch(scrURL)\n                .then(x => {\n                    if (!x.ok) throw new Error(x)\n                    console.log(x)\n                    return x.json()\n                })\n                .then(x => setDetails(x))\n                .catch(x => console.log(x))\n\n            return () => {\n\n            }\n        }\n\n    }, [])\n\n    console.log(details)\n\n    return <div>\n        <h1>{name}</h1>\n        <Slider slides={slides} />\n    </div>\n}\n\nexport default Game"]},"metadata":{},"sourceType":"module"}