{"ast":null,"code":"var _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/pages/game/[slug].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport store from '../../redux/store';\nimport Slider from '../../components/Slider';\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst Column = styled.div`\n    box-sizing: border-box;\n    float:left;\n    width:40%;\n    padding: 0px 20px;\n    @media (max-width: 1189px){\n        width:100%;\n        padding: 0px 0px;\n    }\n`;\nconst Head = styled.div`\n    display: flex;\n    justify-content:space-between;\n    padding: 10px 0px;\n    div:nth-child(1){\n        font-size: 33px;\n    }\n    div:nth-child(2){\n        font-size: 24px;\n        padding: 5px 10px;\n        background-color:#444;\n        border-radius: 5px;\n        border: 1px solid #777;\n    }\n`;\nconst Released = styled.div`\n    padding: 0px 0px;\n    text-align:right;\n    color: #777;\n`;\nconst Descr = styled.p`\n    color: #999;\n`;\n\nconst Game = () => {\n  const {\n    0: slides,\n    1: setSlides\n  } = useState(null);\n  const {\n    0: {\n      name,\n      description_raw,\n      website,\n      background_image,\n      rating,\n      released\n    },\n    1: setDetails\n  } = useState({});\n  const router = useRouter();\n  const {\n    slug\n  } = router.query; //screenshots\n\n  useEffect(() => {\n    if (slug) {\n      const scrURL = 'https://api.rawg.io/api/games/' + slug + '/screenshots';\n      fetch(scrURL).then(x => {\n        if (!x.ok) throw new Error(x); //console.log(x)\n\n        return x.json();\n      }).then(x => setSlides(x.results)).catch(x => console.log(x));\n      return () => {};\n    }\n  }, []); //screenshots\n\n  useEffect(() => {\n    if (slug) {\n      const scrURL = 'https://api.rawg.io/api/games/' + slug;\n      fetch(scrURL).then(x => {\n        if (!x.ok) throw new Error(x);\n        console.log(x);\n        return x.json();\n      }).then(x => {\n        console.log(x);\n        setDetails(x);\n      }).catch(x => console.log(x));\n      return () => {};\n    }\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }\n  }, __jsx(Slider, {\n    slides: slides,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), __jsx(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, name), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, rating)), __jsx(Released, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, new Date(released).getDate(), \"  \", monthNames[new Date(released).getMonth()], \", \", new Date(released).getFullYear()), __jsx(Descr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, description_raw), __jsx(\"a\", {\n    href: website,\n    target: '_blank',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Websilte\")));\n};\n\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const slug = params.slug;\n  return {\n    props: {\n      slug: params.slug\n    }\n  };\n};\nexport default Game;","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/pages/game/[slug].js"],"names":["React","useEffect","useState","useRouter","styled","store","Slider","monthNames","Column","div","Head","Released","Descr","p","Game","slides","setSlides","name","description_raw","website","background_image","rating","released","setDetails","router","slug","query","scrURL","fetch","then","x","ok","Error","json","results","catch","console","log","Date","getDate","getMonth","getFullYear","getServerSideProps","params","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport styled from 'styled-components'\n\nimport store from '../../redux/store'\nimport Slider from '../../components/Slider'\n\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst Column = styled.div`\n    box-sizing: border-box;\n    float:left;\n    width:40%;\n    padding: 0px 20px;\n    @media (max-width: 1189px){\n        width:100%;\n        padding: 0px 0px;\n    }\n`\nconst Head = styled.div`\n    display: flex;\n    justify-content:space-between;\n    padding: 10px 0px;\n    div:nth-child(1){\n        font-size: 33px;\n    }\n    div:nth-child(2){\n        font-size: 24px;\n        padding: 5px 10px;\n        background-color:#444;\n        border-radius: 5px;\n        border: 1px solid #777;\n    }\n`\nconst Released = styled.div`\n    padding: 0px 0px;\n    text-align:right;\n    color: #777;\n`\nconst Descr = styled.p`\n    color: #999;\n`\n\nconst Game = () => {\n\n    const [slides, setSlides] = useState(null)\n    const [{ name, description_raw, website, background_image, rating, released }, setDetails] = useState({})\n\n    const router = useRouter()\n    const { slug } = router.query\n\n\n    //screenshots\n    useEffect(() => {\n\n        if (slug) {\n            const scrURL = 'https://api.rawg.io/api/games/' + slug + '/screenshots'\n\n            fetch(scrURL)\n                .then(x => {\n\n                    if (!x.ok) throw new Error(x)\n                    //console.log(x)\n                    return x.json()\n                })\n                .then(x => setSlides(x.results))\n                .catch(x => console.log(x))\n\n            return () => {\n\n            }\n        }\n\n    }, [])\n\n\n    //screenshots\n    useEffect(() => {\n        if (slug) {\n            const scrURL = 'https://api.rawg.io/api/games/' + slug\n\n            fetch(scrURL)\n                .then(x => {\n                    if (!x.ok) throw new Error(x)\n                    console.log(x)\n                    return x.json()\n                })\n                .then(x => { console.log(x); setDetails(x) })\n                .catch(x => console.log(x))\n\n            return () => {\n\n            }\n        }\n\n    }, [])\n\n\n\n    return <div>\n        {/* <img src={background_image} alt='' width='300px' /> */}\n        <Slider slides={slides} />\n        <Column>\n            <Head>\n                <div>{name}</div>\n                <div>{rating}</div>\n            </Head>\n            <Released>{(new Date(released)).getDate()}  {monthNames[(new Date(released)).getMonth()]}, {(new Date(released)).getFullYear()}</Released>\n            <Descr>{description_raw}</Descr>\n            <a href={website} target={'_blank'}>Websilte</a>\n        </Column>\n    </div>\n}\n\n\n\nexport const getServerSideProps = async ({ params }) => {\n    const slug = params.slug\n    return {\n        props: { slug: params.slug }\n    }\n}\n\n\n\nexport default Game"]},"metadata":{},"sourceType":"module"}