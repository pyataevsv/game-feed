{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/components/Feed.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    padding: 2rem 2rem;\\n    background-color: papayawhip;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport Card from '../components/Card';\nvar Wrapper = styled.section(_templateObject());\n_c = Wrapper;\n\nfunction Feed(_ref) {\n  var _this = this;\n\n  var items = _ref.items,\n      isFetching = _ref.isFetching;\n  // const Items = () => <>{items.map((item, id) => <Card key={id} item={item} />)}</>\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, isFetching ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"Loading....\") : __jsx(React.Fragment, null, items.map(function (item, id) {\n    return __jsx(Card, {\n      key: id,\n      item: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 44\n      }\n    });\n  })));\n}\n\n_c2 = Feed;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    items: state.items,\n    isFetching: state.isFetching\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchPosts: function fetchPosts() {\n      return dispatch(actions.fetchPosts());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Feed\");","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/components/Feed.js"],"names":["React","styled","connect","Card","Wrapper","section","Feed","items","isFetching","map","item","id","mapStateToProps","state","mapDispatchToProps","dispatch","fetchPosts","actions"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,IAAMC,OAAO,GAAGH,MAAM,CAACI,OAAV,mBAAb;KAAMD,O;;AAON,SAASE,IAAT,OAAqC;AAAA;;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAEjC;AAEA,SACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,UAAU,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADO,GAGP,4BAAGD,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAOC,EAAP;AAAA,WAAc,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,EAAX;AAAe,MAAA,IAAI,EAAED,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAAA,GAAV,CAAH,CAJR,CADJ;AASH;;MAbQJ,I;;AAkBT,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCN,IAAAA,KAAK,EAAEM,KAAK,CAACN,KADmB;AAEhCC,IAAAA,UAAU,EAAEK,KAAK,CAACL;AAFc,GAAZ;AAAA,CAAxB;;AAKA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtCC,IAAAA,UAAU,EAAE;AAAA,aAAMD,QAAQ,CAACE,OAAO,CAACD,UAAR,EAAD,CAAd;AAAA;AAD0B,GAAf;AAAA,CAA3B;;AAIA,eAAed,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,IAA7C,CAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\n\nimport Card from '../components/Card'\n\nconst Wrapper = styled.section`\n    padding: 2rem 2rem;\n    background-color: papayawhip;\n`;\n\n\n\nfunction Feed({ items, isFetching }) {\n\n    // const Items = () => <>{items.map((item, id) => <Card key={id} item={item} />)}</>\n\n    return (\n        <Wrapper>\n            {isFetching ?\n                <div>Loading....</div>\n                :\n                <>{items.map((item, id) => <Card key={id} item={item} />)}</>\n            }\n        </Wrapper>\n    )\n}\n\n\n\n\nconst mapStateToProps = (state) => ({\n    items: state.items,\n    isFetching: state.isFetching\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchPosts: () => dispatch(actions.fetchPosts())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed)\n\n\n"]},"metadata":{},"sourceType":"module"}