{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport * as actions from '../redux/actions';\nvar platforms = {\n  PC: '4',\n  iOS: '3',\n  macOS: '5',\n  Linux: '6',\n  Android: '21',\n  PlayStation: '18,16,15,27',\n  XboxOne: '1,14,80',\n  Nintendo: '7,9,8'\n};\nvar Select = styled.div.withConfig({\n  displayName: \"Selectable__Select\",\n  componentId: \"y8a9df-0\"\n})([\"position:relative;display:inline-block;margin-right:10px;width:120px;@media (max-width:652px){width:100%;box-sizing:border-box;margin-bottom:10px;}\"]);\nvar Listbox = styled.div.withConfig({\n  displayName: \"Selectable__Listbox\",\n  componentId: \"y8a9df-1\"\n})([\"display:\", \";position:absolute;top:0;z-index:1;width:100%;background-color:white;border-radius:5px;button{border:none;font-size:16px;padding:5px 10px;width:calc(100% - 10px);margin:5px 5px;display:block;box-sizing:border-box;border-radius:5px;&:hover{background-color:rgb(200,200,200);cursor:pointer;}}\"], function (props) {\n  return props.open ? 'block' : 'none';\n});\nvar Selectname = styled.div.withConfig({\n  displayName: \"Selectable__Selectname\",\n  componentId: \"y8a9df-2\"\n})([\"background-color:\", \";padding:10px 15px;border-radius:5px;&:hover{background-color:#555;cursor:pointer;}\"], function (props) {\n  return props.active ? '#999' : '#444';\n});\n\nfunction Selectable(_ref) {\n  var title = _ref.title,\n      items = _ref.items,\n      word = _ref.word,\n      fetchItems = _ref.fetchItems,\n      filter = _ref.filter,\n      order = _ref.order,\n      queryParam = _ref.queryParam,\n      active = _ref.active;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var listRef = useRef();\n  var btnRef = useRef([]);\n\n  function handleSelect(close) {\n    setOpen(true);\n    document.addEventListener('click', func);\n\n    function func(event) {\n      var x = false;\n\n      var _iterator = _createForOfIteratorHelper(listRef.current.children),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var it = _step.value;\n\n          if (it.contains(event.target)) {\n            x = true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var isClickInside = listRef.current.contains(event.target);\n\n      if (!isClickInside || x) {\n        setOpen(false);\n        document.removeEventListener('click', func);\n      }\n    }\n  }\n\n  function activeToName(active, queryParam) {\n    if (!active) return '';\n\n    if (queryParam == 'order') {\n      var a = active.split('');\n      a.shift();\n      return ': ' + a.join('');\n    }\n\n    if (queryParam == 'filter') {\n      return ': ' + Object.entries(platforms).filter(function (item) {\n        return item[1] == active;\n      })[0][0];\n    }\n  }\n\n  return __jsx(Select, null, __jsx(Selectname, {\n    active: active,\n    onClick: function onClick() {\n      return handleSelect();\n    }\n  }, title + activeToName(active, queryParam), \" \\u2207\"), __jsx(Listbox, {\n    open: open,\n    ref: listRef\n  }, items.map(function (item, id) {\n    var o = {};\n    o[queryParam] = item[1];\n    return __jsx(\"div\", {\n      key: id\n    }, __jsx(\"button\", {\n      ref: btnRef[id],\n      onClick: function onClick() {\n        fetchItems(Object.assign({\n          word: word,\n          order: order,\n          filter: filter\n        }, o));\n      }\n    }, item[0]));\n  }), __jsx(\"div\", null, __jsx(\"button\", {\n    onClick: function onClick() {\n      console.log(Object.assign({\n        word: word,\n        order: order,\n        filter: filter\n      }, _defineProperty({}, queryParam, null)));\n      fetchItems(Object.assign({\n        word: word,\n        order: order,\n        filter: filter\n      }, _defineProperty({}, queryParam, null)));\n    }\n  }, \"Clear \\u2205\"))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    filter: state.filter,\n    order: state.order,\n    word: state.searchWord\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchItems: function fetchItems(x) {\n      return dispatch(actions.fetchItems(x));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selectable);","map":null,"metadata":{},"sourceType":"module"}