{"ast":null,"code":"var _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/components/Slider.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Sliderbox = styled.div`\n    border: 1px solid red;\n    width: 40%;\n    padding:15% 0;\n    position: relative;\n    \n`;\nconst Innerbox = styled.div`\n    position: relative;\n    width: 100%;\n    height:100%;\n    right:40px;\n`;\nconst Img = styled.div`\n    position:absolute;\n    top:0;\n    left:${props => props.id * 100 - 100 * props.state + '%'};\n    background-image:url(${props => props.src});\n    background-size: cover;\n    background-position:top;\n    width:100%;\n    height: 100%;\n    transition: all .5s;\n`;\n\nfunction Slider({\n  slides\n}) {\n  const {\n    0: state,\n    1: setState\n  } = useState(1);\n  console.log(slides);\n  return __jsx(React.Fragment, null, __jsx(Sliderbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, slides ? slides.map((i, id) => __jsx(Img, {\n    key: id,\n    id: id,\n    src: i.image,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 46\n    }\n  })) : null), __jsx(\"button\", {\n    onClick: () => {\n      if (state != 1) setState(state - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"left\"), __jsx(\"button\", {\n    onClick: () => {\n      if (state != slides.length) setState(state + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"right\"));\n}\n\nexport default Slider;","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/components/Slider.js"],"names":["React","useState","styled","Sliderbox","div","Innerbox","Img","props","id","state","src","Slider","slides","setState","console","log","map","i","image","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;;;;;;CAA7B;AAOA,MAAMC,QAAQ,GAAGH,MAAM,CAACE,GAAI;;;;;CAA5B;AAMA,MAAME,GAAG,GAAGJ,MAAM,CAACE,GAAI;;;WAGZG,KAAK,IAAIA,KAAK,CAACC,EAAN,GAAW,GAAX,GAAiB,MAAMD,KAAK,CAACE,KAA7B,GAAqC,GAAI;2BAClCF,KAAK,IAAIA,KAAK,CAACG,GAAI;;;;;;CAJ9C;;AAWA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA4B;AAExB,QAAM;AAAA,OAACH,KAAD;AAAA,OAAQI;AAAR,MAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAEAa,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SAAQ,4BACJ,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKA,MAAM,GAAGA,MAAM,CAACI,GAAP,CAAW,CAACC,CAAD,EAAIT,EAAJ,KAAY,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,EAAV;AAAc,IAAA,EAAE,EAAEA,EAAlB;AAAsB,IAAA,GAAG,EAAES,CAAC,CAACC,KAA7B;AAAoC,IAAA,KAAK,EAAET,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CAAH,GAAmF,IAF9F,CADI,EAOJ;AACI,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIA,KAAK,IAAI,CAAb,EAAgBI,QAAQ,CAACJ,KAAK,GAAG,CAAT,CAAR;AAAqB,KAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPI,EAUJ;AACI,IAAA,OAAO,EAAE,MAAM;AAAE,UAAIA,KAAK,IAAIG,MAAM,CAACO,MAApB,EAA4BN,QAAQ,CAACJ,KAAK,GAAG,CAAT,CAAR;AAAqB,KADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVI,CAAR;AAeH;;AAED,eAAeE,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst Sliderbox = styled.div`\n    border: 1px solid red;\n    width: 40%;\n    padding:15% 0;\n    position: relative;\n    \n`\nconst Innerbox = styled.div`\n    position: relative;\n    width: 100%;\n    height:100%;\n    right:40px;\n`\nconst Img = styled.div`\n    position:absolute;\n    top:0;\n    left:${props => props.id * 100 - 100 * props.state + '%'};\n    background-image:url(${props => props.src});\n    background-size: cover;\n    background-position:top;\n    width:100%;\n    height: 100%;\n    transition: all .5s;\n`\nfunction Slider({ slides }) {\n\n    const [state, setState] = useState(1)\n\n    console.log(slides)\n    return (<>\n        <Sliderbox>\n\n            {slides ? slides.map((i, id) => (<Img key={id} id={id} src={i.image} state={state} />)) : null}\n\n\n        </Sliderbox>\n        <button\n            onClick={() => { if (state != 1) setState(state - 1) }}\n        >left</button>\n        <button\n            onClick={() => { if (state != slides.length) setState(state + 1) }}\n        >right</button>\n    </>\n    )\n}\n\nexport default Slider\n"]},"metadata":{},"sourceType":"module"}