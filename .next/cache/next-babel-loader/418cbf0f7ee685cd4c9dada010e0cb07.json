{"ast":null,"code":"var _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/components/Selectable.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport * as actions from '../redux/actions';\nconst platforms = {\n  PC: '4',\n  iOS: '3',\n  macOS: '5',\n  Linux: '6',\n  Android: '21',\n  PlayStation: '18,16,15,27',\n  XboxOne: '1,14,80',\n  Nintendo: '7,9,8'\n};\nconst Select = styled.div.withConfig({\n  displayName: \"Selectable__Select\",\n  componentId: \"y8a9df-0\"\n})([\"position:relative;display:inline-block;margin-right:10px;\"]);\nconst Listbox = styled.div.withConfig({\n  displayName: \"Selectable__Listbox\",\n  componentId: \"y8a9df-1\"\n})([\"display:\", \";position:absolute;top:0;z-index:1;width:100%;background-color:white;border-radius:5px;button{border:none;font-size:16px;padding:5px 10px;width:calc(100% - 10px);margin:5px 5px;display:block;box-sizing:border-box;border-radius:5px;&:hover{background-color:rgb(200,200,200);cursor:pointer;}}\"], props => props.open ? 'block' : 'none');\nconst Selectname = styled.div.withConfig({\n  displayName: \"Selectable__Selectname\",\n  componentId: \"y8a9df-2\"\n})([\"background-color:\", \";width:120px;padding:10px 15px;border-radius:5px;&:hover{background-color:#555;cursor:pointer;}\"], props => props.active ? '#999' : '#444');\n\nfunction Selectable({\n  title,\n  items,\n  word,\n  fetchItems,\n  filter,\n  order,\n  queryParam,\n  active\n}) {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const listRef = useRef();\n  const btnRef = useRef([]);\n\n  function handleSelect(close) {\n    setOpen(true);\n    document.addEventListener('click', func);\n\n    function func(event) {\n      let x = false;\n\n      for (let it of listRef.current.children) {\n        if (it.contains(event.target)) {\n          x = true;\n        }\n      }\n\n      var isClickInside = listRef.current.contains(event.target);\n\n      if (!isClickInside || x) {\n        setOpen(false);\n        document.removeEventListener('click', func);\n      }\n    }\n  }\n\n  function activeToName(active, queryParam) {\n    if (!active) return '';\n\n    if (queryParam == 'order') {\n      let a = active.split('');\n      a.shift();\n      return ': ' + a.join('');\n    }\n\n    if (queryParam == 'filter') {\n      console.log(queryParam);\n      console.log(Object.entries(platforms).filter(item => item[1] == active));\n      return ': ' + Object.entries(platforms).filter(item => item[1] == active);\n    }\n  }\n\n  return __jsx(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(Selectname, {\n    active: active,\n    onClick: () => handleSelect(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, title + activeToName(active, queryParam), \" \\u2207\"), __jsx(Listbox, {\n    open: open,\n    ref: listRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, items.map((item, id) => {\n    let o = {};\n    o[queryParam] = item[1];\n    return __jsx(\"div\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 28\n      }\n    }, __jsx(\"button\", {\n      ref: btnRef[id],\n      onClick: () => {\n        fetchItems(Object.assign({\n          word,\n          order,\n          filter\n        }, o));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 42\n      }\n    }, item[0]));\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, __jsx(\"button\", {\n    onClick: () => {\n      console.log(Object.assign({\n        word,\n        order,\n        filter\n      }, {\n        [queryParam]: null\n      }));\n      fetchItems(Object.assign({\n        word,\n        order,\n        filter\n      }, {\n        [queryParam]: null\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Clear \\u2205\"))));\n}\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n  order: state.order,\n  word: state.searchWord\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: x => dispatch(actions.fetchItems(x))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selectable);","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/components/Selectable.js"],"names":["React","useState","useRef","connect","styled","actions","platforms","PC","iOS","macOS","Linux","Android","PlayStation","XboxOne","Nintendo","Select","div","Listbox","props","open","Selectname","active","Selectable","title","items","word","fetchItems","filter","order","queryParam","setOpen","listRef","btnRef","handleSelect","close","document","addEventListener","func","event","x","it","current","children","contains","target","isClickInside","removeEventListener","activeToName","a","split","shift","join","console","log","Object","entries","item","map","id","o","assign","mapStateToProps","state","searchWord","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport * as actions from '../redux/actions'\n\n\nconst platforms = {\n    PC: '4',\n    iOS: '3',\n    macOS: '5',\n    Linux: '6',\n    Android: '21',\n    PlayStation: '18,16,15,27',\n    XboxOne: '1,14,80',\n    Nintendo: '7,9,8'\n}\n\nconst Select = styled.div`\n    position:relative;\n    display: inline-block;\n    margin-right: 10px;\n`\nconst Listbox = styled.div`\n    display:${props => props.open ? 'block' : 'none'};\n    position: absolute;\n    top:0;\n    z-index:1;\n    width: 100%;\n    background-color:white;\n    border-radius:5px;\n    button{\n        border:none;\n        font-size: 16px;\n        padding: 5px 10px;\n        width: calc(100% - 10px);\n        margin:5px 5px;\n        display:block;\n        box-sizing:border-box;\n        border-radius: 5px;\n        &:hover{\n            background-color:rgb(200,200,200);\n            cursor: pointer;\n        }\n    }\n`\nconst Selectname = styled.div`\n    background-color:${props => props.active ? '#999' : '#444'};\n    \n    width: 120px;\n    padding: 10px 15px;\n    border-radius: 5px;\n    &:hover{\n        background-color:#555;\n        cursor:pointer; \n    }\n`\n\nfunction Selectable({ title, items, word, fetchItems, filter, order, queryParam, active }) {\n\n    const [open, setOpen] = useState(false)\n    const listRef = useRef()\n    const btnRef = useRef([])\n\n    function handleSelect(close) {\n        setOpen(true)\n        document.addEventListener('click', func);\n        function func(event) {\n            let x = false\n            for (let it of listRef.current.children) {\n                if (it.contains(event.target)) { x = true; }\n            }\n            var isClickInside = listRef.current.contains(event.target);\n            if (!isClickInside || x) {\n                setOpen(false)\n                document.removeEventListener('click', func)\n            }\n        }\n    }\n\n    function activeToName(active, queryParam) {\n        if (!active) return ''\n        if (queryParam == 'order') {\n            let a = active.split('')\n            a.shift()\n            return ': ' + a.join('')\n        }\n        if (queryParam == 'filter') {\n            console.log(queryParam)\n            console.log(Object.entries(platforms).filter(item => item[1] == active))\n            return ': ' + Object.entries(platforms).filter(item => item[1] == active)\n        }\n    }\n\n    return (\n        <Select>\n            <Selectname\n                active={active}\n                onClick={() => handleSelect()}\n            >{title + activeToName(active, queryParam)} &nabla;</Selectname>\n            <Listbox open={open} ref={listRef}>\n                {items.map((item, id) => {\n                    let o = {}\n                    o[queryParam] = item[1]\n\n                    return <div key={id}><button\n                        ref={btnRef[id]}\n\n                        onClick={() => {\n                            fetchItems(Object.assign({ word, order, filter }, o))\n\n                        }}\n                    >{item[0]}</button></div>\n                })}\n                <div>\n                    <button\n                        onClick={() => {\n                            console.log(Object.assign({ word, order, filter }, { [queryParam]: null }))\n                            fetchItems(Object.assign({ word, order, filter }, { [queryParam]: null }))\n\n                        }}\n                    >Clear &empty;</button>\n                </div>\n            </Listbox>\n        </Select >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    filter: state.filter,\n    order: state.order,\n    word: state.searchWord\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchItems: (x) => dispatch(actions.fetchItems(x))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selectable)\n\n"]},"metadata":{},"sourceType":"module"}