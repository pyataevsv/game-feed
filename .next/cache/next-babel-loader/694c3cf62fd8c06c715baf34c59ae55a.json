{"ast":null,"code":"var _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/components/Settings.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Selectable from '../components/Selectable';\nimport * as actions from '../redux/actions';\nconst platforms = {\n  PC: '4',\n  iOS: '3',\n  macOS: '5',\n  Linux: '6',\n  Android: '21',\n  PlayStation: '18,16,15,27',\n  XboxOne: '1,14,80',\n  Nintendo: '7,9,8'\n};\nconst Wrapper = styled.div.withConfig({\n  displayName: \"Settings__Wrapper\",\n  componentId: \"glk8q5-0\"\n})([\"margin:20px;\"]);\nconst Searchbox = styled.div.withConfig({\n  displayName: \"Settings__Searchbox\",\n  componentId: \"glk8q5-1\"\n})([\"position:relative;input{width:calc(100% );outline:none;padding:6px 15px;border-radius:50px;box-sizing:border-box;border:none;margin-bottom:20px;font-size:20px;background-color:#5b5b5b;color:whitesmoke;transition:.5s;::placeholder{color:white;opacity:1;}&:hover{::placeholder{color:black;opacity:1;}color:black;background-color:white;}&:focus{color:black;background-color:white;}}button{position:absolute;right:5px;top:3px;padding:5px 10px;border-radius:50px;border:none;font-size:16px;background-color:#9d9d9d;outline-style:none;&:hover{cursor:pointer;background-color:rgb(200,200,200);}&:active{cursor:pointer;background-color:rgb(230,230,230);}}\"]); // const Select = styled.div`\n//     position:relative;\n//     display: inline-block;\n//     margin-right: 10px;\n// `\n// const Listbox = styled.div`\n//     position: absolute;\n//     top:0;\n//     z-index:1;\n//     width: 100%;\n//     background-color:white;\n//     border-radius:5px;\n//     button{\n//         border:none;\n//         font-size: 16px;\n//         padding: 5px 10px;\n//         width: calc(100% - 10px);\n//         margin:5px 5px;\n//         display:block;\n//         box-sizing:border-box;\n//         border-radius: 5px;\n//         &:hover{\n//             background-color:rgb(200,200,200);\n//             cursor: pointer;\n//         }\n//     }\n// `\n// const Selectname = styled.div`\n//     background-color:#444;\n//     width: 150px;\n//     padding: 5px 15px;\n//     border-radius: 5px;\n// `\n\nexport const Settings = ({\n  fetchItems,\n  filter,\n  order,\n  word\n}) => {\n  const input = useRef();\n  useEffect(() => {\n    fetchItems({});\n  }, []);\n  useEffect(() => {\n    input.current.value = word;\n  });\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, __jsx(Searchbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Search games here\\u2026\",\n    ref: input,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: () => fetchItems({\n      word: input.current.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"Search\")), __jsx(Selectable, {\n    items: Object.entries(platforms),\n    queryParam: 'Filter',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n  order: state.order,\n  word: state.searchWord\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: x => dispatch(actions.fetchItems(x))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/components/Settings.js"],"names":["React","useEffect","useRef","connect","styled","Selectable","actions","platforms","PC","iOS","macOS","Linux","Android","PlayStation","XboxOne","Nintendo","Wrapper","div","Searchbox","Settings","fetchItems","filter","order","word","input","current","value","Object","entries","mapStateToProps","state","searchWord","mapDispatchToProps","dispatch","x"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAE,GADU;AAEdC,EAAAA,GAAG,EAAE,GAFS;AAGdC,EAAAA,KAAK,EAAE,GAHO;AAIdC,EAAAA,KAAK,EAAE,GAJO;AAKdC,EAAAA,OAAO,EAAE,IALK;AAMdC,EAAAA,WAAW,EAAE,aANC;AAOdC,EAAAA,OAAO,EAAE,SAPK;AAQdC,EAAAA,QAAQ,EAAE;AARI,CAAlB;AAYA,MAAMC,OAAO,GAAGZ,MAAM,CAACa,GAAV;AAAA;AAAA;AAAA,oBAAb;AAGA,MAAMC,SAAS,GAAGd,MAAM,CAACa,GAAV;AAAA;AAAA;AAAA,+oBAAf,C,CA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAIA,OAAO,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA,KAAtB;AAA6BC,EAAAA;AAA7B,CAAD,KAAyC;AAC7D,QAAMC,KAAK,GAAGtB,MAAM,EAApB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,KAAK,CAACC,OAAN,CAAcC,KAAd,GAAsBH,IAAtB;AACH,GAFQ,CAAT;AAMA,SACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,WAAW,EAAC,yBAAnB;AAAwC,IAAA,GAAG,EAAEC,KAA7C;AAAoD,IAAA,IAAI,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAMJ,UAAU,CAAC;AAAEG,MAAAA,IAAI,EAAEC,KAAK,CAACC,OAAN,CAAcC;AAAtB,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,EAKI,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,MAAM,CAACC,OAAP,CAAerB,SAAf,CAAnB;AAA8C,IAAA,UAAU,EAAE,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AA0BH,CAvCM;;AAyCP,MAAMsB,eAAe,GAAIC,KAAD,KAAY;AAChCT,EAAAA,MAAM,EAAES,KAAK,CAACT,MADkB;AAEhCC,EAAAA,KAAK,EAAEQ,KAAK,CAACR,KAFmB;AAGhCC,EAAAA,IAAI,EAAEO,KAAK,CAACC;AAHoB,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCb,EAAAA,UAAU,EAAGc,CAAD,IAAOD,QAAQ,CAAC3B,OAAO,CAACc,UAAR,CAAmBc,CAAnB,CAAD;AADW,CAAf,CAA3B;;AAIA,eAAe/B,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Selectable from '../components/Selectable'\nimport * as actions from '../redux/actions'\n\nconst platforms = {\n    PC: '4',\n    iOS: '3',\n    macOS: '5',\n    Linux: '6',\n    Android: '21',\n    PlayStation: '18,16,15,27',\n    XboxOne: '1,14,80',\n    Nintendo: '7,9,8'\n\n}\n\nconst Wrapper = styled.div`\n    margin: 20px;\n`\nconst Searchbox = styled.div`\n    position:relative;\n\n    input{\n        width: calc(100% );\n        outline:none;\n        padding: 6px 15px;\n        border-radius: 50px;\n        box-sizing:border-box;\n        border: none;\n        margin-bottom:20px;\n        font-size:20px;\n        background-color: #5b5b5b;\n        color: whitesmoke;\n        transition: .5s;\n\n        ::placeholder { \n            color: white;\n            opacity: 1; \n            }\n\n        &:hover{\n            ::placeholder { \n            color: black;\n            opacity: 1; \n            }\n            color: black;\n            background-color: white;\n        }\n        &:focus{\n            color: black;\n            background-color: white;\n        }\n    }\n\n    button{\n        position:absolute;\n        right: 5px;\n        top: 3px;\n        padding: 5px 10px;\n        border-radius: 50px;\n        border: none;\n        font-size: 16px;\n        background-color: #9d9d9d;\n        outline-style:none;\n\n       &:hover{\n           cursor: pointer;\n           background-color: rgb(200,200,200);\n       }\n       &:active{\n           cursor: pointer;\n           background-color: rgb(230,230,230);\n       }\n\n    }\n`\n\n// const Select = styled.div`\n//     position:relative;\n//     display: inline-block;\n//     margin-right: 10px;\n// `\n// const Listbox = styled.div`\n//     position: absolute;\n//     top:0;\n//     z-index:1;\n//     width: 100%;\n//     background-color:white;\n//     border-radius:5px;\n//     button{\n//         border:none;\n//         font-size: 16px;\n//         padding: 5px 10px;\n//         width: calc(100% - 10px);\n//         margin:5px 5px;\n//         display:block;\n//         box-sizing:border-box;\n//         border-radius: 5px;\n//         &:hover{\n//             background-color:rgb(200,200,200);\n//             cursor: pointer;\n//         }\n//     }\n// `\n// const Selectname = styled.div`\n//     background-color:#444;\n//     width: 150px;\n//     padding: 5px 15px;\n//     border-radius: 5px;\n\n// `\n\n\n\nexport const Settings = ({ fetchItems, filter, order, word }) => {\n    const input = useRef()\n\n    useEffect(() => {\n        fetchItems({})\n    }, [])\n\n    useEffect(() => {\n        input.current.value = word\n    })\n\n\n\n    return (\n        <Wrapper>\n            <Searchbox>\n                <input placeholder=\"Search games hereâ€¦\" ref={input} type='text'></input>\n                <button onClick={() => fetchItems({ word: input.current.value })}>Search</button>\n            </Searchbox>\n            <Selectable items={Object.entries(platforms)} queryParam={'Filter'} />\n            {/* <Select>\n                <Selectname onClick={(e) => handleSelect(e)}>Platforms</Selectname>\n                <Listbox>\n                    {Object.entries(platforms).map((item, id) => <div><button\n                        onClick={() => fetchItems({ word, order, filter: item[1] })}\n                        key={id}>{item[0]}</button></div>)}\n                </Listbox>\n            </Select> */}\n            {/* <Select>\n                <Selectname>\n                    OrderBy:\n                </Selectname>\n                <Listbox>\n                    <button onClick={() => fetchItems({ order: '-released' })}>Release date</button>\n                    <button onClick={() => fetchItems({ order: '-rating' })}>Raiting</button>\n                </Listbox>\n            </Select> */}\n        </Wrapper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    filter: state.filter,\n    order: state.order,\n    word: state.searchWord\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchItems: (x) => dispatch(actions.fetchItems(x))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n\n"]},"metadata":{},"sourceType":"module"}