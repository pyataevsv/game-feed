{"ast":null,"code":"var _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/components/Selectable.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport * as actions from '../redux/actions';\nvar Select = styled.div.withConfig({\n  displayName: \"Selectable__Select\",\n  componentId: \"y8a9df-0\"\n})([\"position:relative;display:inline-block;margin-right:10px;\"]);\n_c = Select;\nvar Listbox = styled.div.withConfig({\n  displayName: \"Selectable__Listbox\",\n  componentId: \"y8a9df-1\"\n})([\"display:\", \";position:absolute;top:0;z-index:1;width:100%;background-color:white;border-radius:5px;button{border:none;font-size:16px;padding:5px 10px;width:calc(100% - 10px);margin:5px 5px;display:block;box-sizing:border-box;border-radius:5px;&:hover{background-color:rgb(200,200,200);cursor:pointer;}}\"], function (props) {\n  return props.open ? 'block' : 'none';\n});\n_c2 = Listbox;\nvar Selectname = styled.div.withConfig({\n  displayName: \"Selectable__Selectname\",\n  componentId: \"y8a9df-2\"\n})([\"background-color:#444;width:150px;padding:5px 15px;border-radius:5px;\"]);\n_c3 = Selectname;\n\nfunction Selectable(_ref) {\n  _s();\n\n  var _this = this;\n\n  var items = _ref.items,\n      word = _ref.word,\n      fetchItems = _ref.fetchItems,\n      filter = _ref.filter,\n      order = _ref.order,\n      queryParam = _ref.queryParam;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  function handleSelect(e) {\n    var specifiedElement = e.target;\n    document.addEventListener('click', function (event) {\n      var isClickInside = specifiedElement.contains(event.target);\n\n      if (!isClickInside) {\n        //the click was outside the specifiedElement, do something\n        console.log('outside!!!');\n      }\n    });\n  }\n\n  console.log(queryParam);\n  var queryObj = Object.assign({\n    word: word,\n    order: order,\n    filter: filter\n  }, {\n    filter: '4'\n  });\n  return __jsx(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Selectname, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Platforms\"), __jsx(Listbox, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, items.map(function (item, id) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 42\n      }\n    }, __jsx(\"button\", {\n      onClick: function onClick() {\n        return fetchItems(queryObj);\n      },\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 47\n      }\n    }, item[0]));\n  })));\n}\n\n_s(Selectable, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c4 = Selectable;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    filter: state.filter,\n    order: state.order,\n    word: state.searchWord\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchItems: function fetchItems(x) {\n      return dispatch(actions.fetchItems(x));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selectable);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"Listbox\");\n$RefreshReg$(_c3, \"Selectname\");\n$RefreshReg$(_c4, \"Selectable\");","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/components/Selectable.js"],"names":["React","useState","connect","styled","actions","Select","div","Listbox","props","open","Selectname","Selectable","items","word","fetchItems","filter","order","queryParam","setOpen","handleSelect","e","specifiedElement","target","document","addEventListener","event","isClickInside","contains","console","log","queryObj","Object","assign","map","item","id","mapStateToProps","state","searchWord","mapDispatchToProps","dispatch","x"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport * as actions from '../redux/actions'\n\n\nconst Select = styled.div`\n    position:relative;\n    display: inline-block;\n    margin-right: 10px;\n`\nconst Listbox = styled.div`\n    display:${props => props.open ? 'block' : 'none'};\n    position: absolute;\n    top:0;\n    z-index:1;\n    width: 100%;\n    background-color:white;\n    border-radius:5px;\n    button{\n        border:none;\n        font-size: 16px;\n        padding: 5px 10px;\n        width: calc(100% - 10px);\n        margin:5px 5px;\n        display:block;\n        box-sizing:border-box;\n        border-radius: 5px;\n        &:hover{\n            background-color:rgb(200,200,200);\n            cursor: pointer;\n        }\n    }\n`\nconst Selectname = styled.div`\n    background-color:#444;\n    width: 150px;\n    padding: 5px 15px;\n    border-radius: 5px;\n    \n`\n\nfunction Selectable({ items, word, fetchItems, filter, order, queryParam }) {\n\n    const [open, setOpen] = useState(false)\n\n    function handleSelect(e) {\n        const specifiedElement = e.target;\n        document.addEventListener('click', function (event) {\n            var isClickInside = specifiedElement.contains(event.target);\n\n            if (!isClickInside) {\n                //the click was outside the specifiedElement, do something\n                console.log('outside!!!')\n            }\n        });\n    }\n\n    console.log(queryParam)\n\n    const queryObj = Object.assign({ word, order, filter }, { filter: '4' })\n    return (\n        <Select>\n            <Selectname>Platforms</Selectname>\n            <Listbox open={true}>\n                {items.map((item, id) => <div><button\n                    onClick={() => fetchItems(queryObj)}\n                    key={id}>{item[0]}</button></div>)}\n            </Listbox>\n        </Select >\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    filter: state.filter,\n    order: state.order,\n    word: state.searchWord\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchItems: (x) => dispatch(actions.fetchItems(x))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Selectable)\n\n"]},"metadata":{},"sourceType":"module"}