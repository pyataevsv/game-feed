{"ast":null,"code":"//const { combineReducers } = require(\"redux\")\nimport * as actions from './actions';\nimport { combineReducers } from 'redux';\nconst iniState = {\n  items: [],\n  filter: null,\n  searchWord: null,\n  order: null,\n  isFetching: false\n};\nconst rootReducer = combineReducers({\n  filter: filterReducer\n});\nexport default rootReducer;\n\nfunction filterReducer(state = iniState.filter, action) {\n  if (action.type === actions.SET_FILTER) {\n    return action.filter;\n  }\n\n  return state;\n}\n\nfunction searchWordReducer(state = iniState.searchWord, action) {\n  if (action.type === actions.SET_WORD) {\n    return action.word;\n  }\n\n  return state;\n}\n\nfunction orderReducer(state = iniState.order, action) {\n  if (action.type === actions.SET_ORDER) {\n    return action.order;\n  }\n\n  return state;\n}\n\nfunction sortReducer(state = iniState.sort, action) {\n  if (action.type === actions.SET_SORT) {\n    return action.sort;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/redux/reducers.js"],"names":["actions","combineReducers","iniState","items","filter","searchWord","order","isFetching","rootReducer","filterReducer","state","action","type","SET_FILTER","searchWordReducer","SET_WORD","word","orderReducer","SET_ORDER","sortReducer","sort","SET_SORT"],"mappings":"AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,WAAzB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAGA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,KAAK,EAAE,EADM;AAEbC,EAAAA,MAAM,EAAE,IAFK;AAGbC,EAAAA,UAAU,EAAE,IAHC;AAIbC,EAAAA,KAAK,EAAE,IAJM;AAKbC,EAAAA,UAAU,EAAE;AALC,CAAjB;AAQA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAChCG,EAAAA,MAAM,EAAEK;AADwB,CAAD,CAAnC;AAIA,eAAeD,WAAf;;AAEA,SAASC,aAAT,CAAuBC,KAAK,GAAGR,QAAQ,CAACE,MAAxC,EAAgDO,MAAhD,EAAwD;AACpD,MAAIA,MAAM,CAACC,IAAP,KAAgBZ,OAAO,CAACa,UAA5B,EAAwC;AACpC,WAAOF,MAAM,CAACP,MAAd;AACH;;AACD,SAAOM,KAAP;AACH;;AACD,SAASI,iBAAT,CAA2BJ,KAAK,GAAGR,QAAQ,CAACG,UAA5C,EAAwDM,MAAxD,EAAgE;AAC5D,MAAIA,MAAM,CAACC,IAAP,KAAgBZ,OAAO,CAACe,QAA5B,EAAsC;AAClC,WAAOJ,MAAM,CAACK,IAAd;AACH;;AACD,SAAON,KAAP;AACH;;AACD,SAASO,YAAT,CAAsBP,KAAK,GAAGR,QAAQ,CAACI,KAAvC,EAA8CK,MAA9C,EAAsD;AAClD,MAAIA,MAAM,CAACC,IAAP,KAAgBZ,OAAO,CAACkB,SAA5B,EAAuC;AACnC,WAAOP,MAAM,CAACL,KAAd;AACH;;AACD,SAAOI,KAAP;AACH;;AACD,SAASS,WAAT,CAAqBT,KAAK,GAAGR,QAAQ,CAACkB,IAAtC,EAA4CT,MAA5C,EAAoD;AAChD,MAAIA,MAAM,CAACC,IAAP,KAAgBZ,OAAO,CAACqB,QAA5B,EAAsC;AAClC,WAAOV,MAAM,CAACS,IAAd;AACH;;AACD,SAAOV,KAAP;AACH","sourcesContent":["//const { combineReducers } = require(\"redux\")\nimport * as actions from './actions'\nimport { combineReducers } from 'redux'\n\n\nconst iniState = {\n    items: [],\n    filter: null,\n    searchWord: null,\n    order: null,\n    isFetching: false,\n}\n\nconst rootReducer = combineReducers({\n    filter: filterReducer\n})\n\nexport default rootReducer\n\nfunction filterReducer(state = iniState.filter, action) {\n    if (action.type === actions.SET_FILTER) {\n        return action.filter\n    }\n    return state\n}\nfunction searchWordReducer(state = iniState.searchWord, action) {\n    if (action.type === actions.SET_WORD) {\n        return action.word\n    }\n    return state\n}\nfunction orderReducer(state = iniState.order, action) {\n    if (action.type === actions.SET_ORDER) {\n        return action.order\n    }\n    return state\n}\nfunction sortReducer(state = iniState.sort, action) {\n    if (action.type === actions.SET_SORT) {\n        return action.sort\n    }\n    return state\n}"]},"metadata":{},"sourceType":"module"}