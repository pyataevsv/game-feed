{"ast":null,"code":"export var SET_FILTER = 'SET_FILTER';\nexport var SET_WORD = 'SET_WORD';\nexport var SET_ORDER = 'SET_ORDER';\nexport var SET_IS_FETCHING = 'SET_IS_FETCHING';\nexport var SET_IS_NOT_FETCHING = 'SET_IS_NOT_FETCHING';\nexport var ADD_ITEMS = 'ADD_ITEMS';\nexport var RESET_ITEMS = 'RESET_ITEMS';\nexport var SET_FETCHING_ERROR = 'SET_FETCHING_ERROR';\nvar page_size = 20;\nvar URL = 'https://api.rawg.io/api/games?';\nvar page = 1;\nexport function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    filter: filter\n  };\n}\nexport function setWord(word) {\n  return {\n    type: SET_WORD,\n    word: word\n  };\n}\nexport function setOrder(order) {\n  return {\n    type: SET_ORDER,\n    order: order\n  };\n}\nexport function setIsFetching() {\n  return {\n    type: SET_IS_FETCHING\n  };\n}\nexport function setIsNotFetching() {\n  return {\n    type: SET_IS_NOT_FETCHING\n  };\n}\nexport function addItems(items) {\n  return {\n    type: ADD_ITEMS,\n    items: items\n  };\n}\nexport function resetItems(items) {\n  return {\n    type: RESET_ITEMS,\n    items: items\n  };\n}\nexport function setFetchingError(error) {\n  return {\n    type: SET_FETCHING_ERROR,\n    error: error\n  };\n} ////////////////////////////////////////       ASYNC ACTIONS\n\nexport function fetchItems(_ref) {\n  var _ref$reset = _ref.reset,\n      reset = _ref$reset === void 0 ? true : _ref$reset,\n      word = _ref.word;\n  var requestUrl = URL + 'page_size=' + page_size + '&page=' + page;\n  if (word) requestUrl = requestUrl + '&search=' + word;\n  return function (dispatch) {\n    dispatch(setIsFetching());\n    dispatch(setFetchingError(null));\n    fetch(requestUrl).then(function (res) {\n      if (!res.ok) {\n        console.log(res);\n        throw res.status;\n      }\n\n      dispatch(setIsNotFetching());\n      return res.json();\n    }).then(function (res) {\n      page++;\n\n      if (reset) {\n        dispatch(resetItems(res.results));\n      } else {\n        dispatch(addItems(res.results));\n      }\n    })[\"catch\"](function (e) {\n      console.log('ERROR_CATCHED: ', e);\n      dispatch(setFetchingError(e));\n      dispatch(setIsNotFetching());\n    });\n  };\n}","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/redux/actions.js"],"names":["SET_FILTER","SET_WORD","SET_ORDER","SET_IS_FETCHING","SET_IS_NOT_FETCHING","ADD_ITEMS","RESET_ITEMS","SET_FETCHING_ERROR","page_size","URL","page","setFilter","filter","type","setWord","word","setOrder","order","setIsFetching","setIsNotFetching","addItems","items","resetItems","setFetchingError","error","fetchItems","reset","requestUrl","dispatch","fetch","then","res","ok","console","log","status","json","results","e"],"mappings":"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","sourcesContent":["export const SET_FILTER = 'SET_FILTER'\nexport const SET_WORD = 'SET_WORD'\nexport const SET_ORDER = 'SET_ORDER'\nexport const SET_IS_FETCHING = 'SET_IS_FETCHING'\nexport const SET_IS_NOT_FETCHING = 'SET_IS_NOT_FETCHING'\nexport const ADD_ITEMS = 'ADD_ITEMS'\nexport const RESET_ITEMS = 'RESET_ITEMS'\nexport const SET_FETCHING_ERROR = 'SET_FETCHING_ERROR'\n\nconst page_size = 20\nconst URL = 'https://api.rawg.io/api/games?'\nlet page = 1\n\nexport function setFilter(filter) {\n    return {\n        type: SET_FILTER,\n        filter\n    }\n}\nexport function setWord(word) {\n    return {\n        type: SET_WORD,\n        word\n    }\n}\nexport function setOrder(order) {\n    return {\n        type: SET_ORDER,\n        order\n    }\n}\nexport function setIsFetching() {\n    return {\n        type: SET_IS_FETCHING\n    }\n}\nexport function setIsNotFetching() {\n    return {\n        type: SET_IS_NOT_FETCHING\n    }\n}\nexport function addItems(items) {\n    return {\n        type: ADD_ITEMS,\n        items\n    }\n}\nexport function resetItems(items) {\n    return {\n        type: RESET_ITEMS,\n        items\n    }\n}\nexport function setFetchingError(error) {\n    return {\n        type: SET_FETCHING_ERROR,\n        error\n    }\n}\n\n\n\n////////////////////////////////////////       ASYNC ACTIONS\n\n\nexport function fetchItems({ reset = true, word }) {\n\n    let requestUrl = URL + 'page_size=' + page_size + '&page=' + page\n\n    if (word) requestUrl = requestUrl + '&search=' + word\n\n\n    return (dispatch) => {\n        dispatch(setIsFetching())\n        dispatch(setFetchingError(null))\n        fetch(requestUrl)\n            .then(res => {\n                if (!res.ok) { console.log(res); throw res.status }\n                dispatch(setIsNotFetching())\n                return res.json()\n            })\n            .then(res => {\n                page++;\n                if (reset) {\n                    dispatch(resetItems(res.results))\n                } else {\n                    dispatch(addItems(res.results))\n                }\n            })\n            .catch(e => {\n                console.log('ERROR_CATCHED: ', e)\n                dispatch(setFetchingError(e))\n                dispatch(setIsNotFetching())\n            })\n\n\n    }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}