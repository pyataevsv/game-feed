{"ast":null,"code":"var _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/components/Settings.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../redux/actions';\nconst platforms = {\n  PC: '4',\n  iOS: '3',\n  macOS: '5',\n  Linux: '6',\n  Android: '21',\n  PlayStation: '18,16,15,27',\n  XboxOne: '1,14,80',\n  Nintendo: '7,9,8'\n};\nexport const Settings = ({\n  fetchItems\n}) => {\n  const input = useRef();\n  useEffect(() => {\n    fetch('https://api.rawg.io/api/platforms').then(res => res.json()).then(res => console.table(res.results.sort((x, y) => y.games_count - x.games_count)));\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"FilterBy:\", Object.entries(platforms).map((item, id) => __jsx(\"button\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 50\n    }\n  }, item[0]))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Word:\", __jsx(\"input\", {\n    ref: input,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: () => fetchItems({\n      word: input.current.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Search\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"OrderBy:\", __jsx(\"button\", {\n    onClick: () => fetchItems({\n      order: '-released'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Release date\"), __jsx(\"button\", {\n    onClick: () => fetchItems({\n      order: '-rating'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Raiting\")), __jsx(\"button\", {\n    onClick: () => fetchItems({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Search\"));\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: x => dispatch(actions.fetchItems(x))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/components/Settings.js"],"names":["React","useEffect","useRef","connect","actions","platforms","PC","iOS","macOS","Linux","Android","PlayStation","XboxOne","Nintendo","Settings","fetchItems","input","fetch","then","res","json","console","table","results","sort","x","y","games_count","Object","entries","map","item","id","word","current","value","order","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,EAAE,EAAE,GADU;AAEdC,EAAAA,GAAG,EAAE,GAFS;AAGdC,EAAAA,KAAK,EAAE,GAHO;AAIdC,EAAAA,KAAK,EAAE,GAJO;AAKdC,EAAAA,OAAO,EAAE,IALK;AAMdC,EAAAA,WAAW,EAAE,aANC;AAOdC,EAAAA,OAAO,EAAE,SAPK;AAQdC,EAAAA,QAAQ,EAAE;AARI,CAAlB;AAYA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACxC,QAAMC,KAAK,GAAGd,MAAM,EAApB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAIE,OAAO,CAACC,KAAR,CAAcH,GAAG,CAACI,OAAJ,CAAYC,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,WAAF,GAAgBF,CAAC,CAACE,WAA7C,CAAd,CAFjB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEPC,MAAM,CAACC,OAAP,CAAexB,SAAf,EAA0ByB,GAA1B,CAA8B,CAACC,IAAD,EAAOC,EAAP,KAAc;AAAQ,IAAA,GAAG,EAAEA,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,IAAI,CAAC,CAAD,CAAtB,CAA5C,CAFO,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEI;AAAO,IAAA,GAAG,EAAEf,KAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAQ,IAAA,OAAO,EAAE,MAAMD,UAAU,CAAC;AAAEkB,MAAAA,IAAI,EAAEjB,KAAK,CAACkB,OAAN,CAAcC;AAAtB,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CALJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEI;AAAQ,IAAA,OAAO,EAAE,MAAMpB,UAAU,CAAC;AAAEqB,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAGI;AAAQ,IAAA,OAAO,EAAE,MAAMrB,UAAU,CAAC;AAAEqB,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,CAVJ,EAeI;AAAQ,IAAA,OAAO,EAAE,MAAMrB,UAAU,CAAC,EAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,CADJ;AAmBH,CA5BM;;AA8BP,MAAMsB,eAAe,GAAIC,KAAD,KAAY,EAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCzB,EAAAA,UAAU,EAAGU,CAAD,IAAOe,QAAQ,CAACpC,OAAO,CAACW,UAAR,CAAmBU,CAAnB,CAAD;AADW,CAAf,CAA3B;;AAIA,eAAetB,OAAO,CAACkC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,QAA7C,CAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../redux/actions'\n\nconst platforms = {\n    PC: '4',\n    iOS: '3',\n    macOS: '5',\n    Linux: '6',\n    Android: '21',\n    PlayStation: '18,16,15,27',\n    XboxOne: '1,14,80',\n    Nintendo: '7,9,8'\n\n}\n\nexport const Settings = ({ fetchItems }) => {\n    const input = useRef()\n\n    useEffect(() => {\n        fetch('https://api.rawg.io/api/platforms')\n            .then(res => res.json())\n            .then(res => console.table(res.results.sort((x, y) => y.games_count - x.games_count)))\n    }, [])\n\n    return (\n        <div>\n            <div>\n                FilterBy:\n    {Object.entries(platforms).map((item, id) => <button key={id}>{item[0]}</button>)}\n            </div>\n            <div>\n                Word:\n                <input ref={input} type='text'></input>\n                <button onClick={() => fetchItems({ word: input.current.value })}>Search</button>\n            </div>\n            <div>\n                OrderBy:\n                <button onClick={() => fetchItems({ order: '-released' })}>Release date</button>\n                <button onClick={() => fetchItems({ order: '-rating' })}>Raiting</button>\n            </div>\n            <button onClick={() => fetchItems({})}>Search</button>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchItems: (x) => dispatch(actions.fetchItems(x))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n\n"]},"metadata":{},"sourceType":"module"}