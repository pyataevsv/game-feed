{"ast":null,"code":"export const SET_FILTER = 'SET_FILTER';\nexport const SET_WORD = 'SET_WORD';\nexport const SET_ORDER = 'SET_ORDER';\nexport const SET_IS_FETCHING = 'SET_IS_FETCHING';\nexport const SET_IS_NOT_FETCHING = 'SET_IS_NOT_FETCHING';\nexport const ADD_ITEMS = 'ADD_ITEMS';\nexport const RESET_ITEMS = 'RESET_ITEMS';\nexport const SET_FETCHING_ERROR = 'SET_FETCHING_ERROR';\nconst page_size = 20;\nconst ERA = '2000-01-01,2021-12-31';\nconst URL = 'https://api.rawg.io/api/games?';\nlet page = 1;\nexport function setFilter(filter) {\n  return {\n    type: SET_FILTER,\n    filter\n  };\n}\nexport function setWord(word) {\n  return {\n    type: SET_WORD,\n    word\n  };\n}\nexport function setOrder(order) {\n  return {\n    type: SET_ORDER,\n    order\n  };\n}\nexport function setIsFetching() {\n  return {\n    type: SET_IS_FETCHING\n  };\n}\nexport function setIsNotFetching() {\n  return {\n    type: SET_IS_NOT_FETCHING\n  };\n}\nexport function addItems(items) {\n  return {\n    type: ADD_ITEMS,\n    items\n  };\n}\nexport function resetItems(items) {\n  return {\n    type: RESET_ITEMS,\n    items\n  };\n}\nexport function setFetchingError(error) {\n  return {\n    type: SET_FETCHING_ERROR,\n    error\n  };\n} ////////////////////////////////////////       ASYNC ACTIONS\n\nexport function fetchItems({\n  reset = true,\n  word,\n  order,\n  filter\n}) {\n  if (reset) page = 1;\n  if (word === undefined) word = null;\n  if (order === undefined) order = null;\n  if (filter === undefined) filter = null;\n  let requestUrl = URL + 'page_size=' + page_size + '&page=' + page + '&dates=' + ERA;\n  if (word) requestUrl = requestUrl + '&search=' + word;\n  if (order) requestUrl = requestUrl + '&ordering=' + order;\n  if (filter) requestUrl = requestUrl + '&platforms=' + filter;\n  return dispatch => {\n    console.log('URL', requestUrl);\n    dispatch(setOrder(order));\n    dispatch(setWord(word));\n    dispatch(setFilter(filter));\n    dispatch(setIsFetching());\n    dispatch(setFetchingError(null));\n    fetch(requestUrl).then(res => {\n      if (!res.ok) {\n        console.log(res);\n        throw res.status;\n      }\n\n      dispatch(setIsNotFetching());\n      return res.json();\n    }).then(res => {\n      page++;\n\n      if (reset) {\n        dispatch(resetItems(res.results));\n      } else {\n        dispatch(addItems(res.results));\n      }\n    }).catch(e => {\n      console.log('ERROR_CATCHED: ', e);\n      dispatch(setFetchingError(e));\n      dispatch(setIsNotFetching());\n    });\n  };\n}","map":null,"metadata":{},"sourceType":"module"}