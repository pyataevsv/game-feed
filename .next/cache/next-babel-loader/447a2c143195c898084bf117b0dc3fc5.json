{"ast":null,"code":"var _jsxFileName = \"/Users/Stepan/Documents/code/proj/game-change/src/components/Settings.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport * as actions from '../redux/actions';\nconst platforms = {\n  PC: '4',\n  iOS: '3',\n  macOS: '5',\n  Linux: '6',\n  Android: '21',\n  PlayStation: '18,16,15,27',\n  XboxOne: '1,14,80',\n  Nintendo: '7,9,8'\n};\nconst Wrapper = styled.div.withConfig({\n  displayName: \"Settings__Wrapper\",\n  componentId: \"glk8q5-0\"\n})([\"margin:20px;\"]);\nconst Searchbox = styled.div.withConfig({\n  displayName: \"Settings__Searchbox\",\n  componentId: \"glk8q5-1\"\n})([\"position:relative;input{width:calc(100% );outline:none;padding:6px 15px;border-radius:50px;box-sizing:border-box;border:none;margin-bottom:20px;font-size:20px;background-color:#5b5b5b;color:black;box-shadow:inset 6px 5px 18px 0px #2a2929,inset -5px -6px 12px 0px #9a9797;transition:.5s;::placeholder{color:#999;opacity:1;}&:hover{box-shadow:inset 6px 5px 18px 0px white,inset -5px -6px 12px 0px white;background-color:white;}}button{position:absolute;right:0;top:50px;}\"]);\nexport const Settings = ({\n  fetchItems,\n  filter,\n  order,\n  word\n}) => {\n  const input = useRef();\n  useEffect(() => {\n    fetchItems({});\n  }, []);\n  useEffect(() => {\n    input.current.value = word;\n  });\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(Searchbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Search games here\\u2026\",\n    ref: input,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: () => fetchItems({\n      word: input.current.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Search\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"FilterBy:\", __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, Object.entries(platforms).map((item, id) => __jsx(\"button\", {\n    onClick: () => fetchItems({\n      word,\n      order,\n      filter: item[1]\n    }),\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 66\n    }\n  }, item[0])))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"OrderBy:\", __jsx(\"button\", {\n    onClick: () => fetchItems({\n      order: '-released'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Release date\"), __jsx(\"button\", {\n    onClick: () => fetchItems({\n      order: '-rating'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Raiting\")), __jsx(\"button\", {\n    onClick: () => fetchItems({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Search\"));\n};\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n  order: state.order,\n  word: state.searchWord\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: x => dispatch(actions.fetchItems(x))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/Users/Stepan/Documents/code/proj/game-change/src/components/Settings.js"],"names":["React","useEffect","useRef","connect","styled","actions","platforms","PC","iOS","macOS","Linux","Android","PlayStation","XboxOne","Nintendo","Wrapper","div","Searchbox","Settings","fetchItems","filter","order","word","input","current","value","Object","entries","map","item","id","mapStateToProps","state","searchWord","mapDispatchToProps","dispatch","x"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport * as actions from '../redux/actions'\n\nconst platforms = {\n    PC: '4',\n    iOS: '3',\n    macOS: '5',\n    Linux: '6',\n    Android: '21',\n    PlayStation: '18,16,15,27',\n    XboxOne: '1,14,80',\n    Nintendo: '7,9,8'\n\n}\n\nconst Wrapper = styled.div`\n    margin: 20px;\n`\nconst Searchbox = styled.div`\n    position:relative;\n\n    input{\n        width: calc(100% );\n        outline:none;\n        padding: 6px 15px;\n        border-radius: 50px;\n        box-sizing:border-box;\n        border: none;\n        margin-bottom:20px;\n        font-size:20px;\n        background-color: #5b5b5b;\n        color: black;\n        box-shadow: inset 6px 5px 18px 0px #2a2929, inset -5px -6px 12px 0px #9a9797;\n        transition: .5s;\n        ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n        color: #999;\n        opacity: 1; /* Firefox */\n        }\n\n        &:hover{\n            box-shadow: inset 6px 5px 18px 0px white, inset -5px -6px 12px 0px white;\n            background-color: white;\n        }\n    }\n\n    button{\n        position:absolute;\n        right: 0;\n       top: 50px;\n    }\n`\n\n\n\n\n\nexport const Settings = ({ fetchItems, filter, order, word }) => {\n    const input = useRef()\n\n    useEffect(() => {\n        fetchItems({})\n    }, [])\n\n    useEffect(() => {\n        input.current.value = word\n    })\n\n    return (\n        <Wrapper>\n            <Searchbox>\n                <input placeholder=\"Search games hereâ€¦\" ref={input} type='text'></input>\n                <button onClick={() => fetchItems({ word: input.current.value })}>Search</button>\n            </Searchbox>\n            <div>\n                FilterBy:\n                <div>\n                    {Object.entries(platforms).map((item, id) => <button\n                        onClick={() => fetchItems({ word, order, filter: item[1] })}\n                        key={id}>{item[0]}</button>)}\n                </div>\n            </div>\n\n            <div>\n                OrderBy:\n                <button onClick={() => fetchItems({ order: '-released' })}>Release date</button>\n                <button onClick={() => fetchItems({ order: '-rating' })}>Raiting</button>\n            </div>\n            <button onClick={() => fetchItems({})}>Search</button>\n        </Wrapper>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    filter: state.filter,\n    order: state.order,\n    word: state.searchWord\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchItems: (x) => dispatch(actions.fetchItems(x))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n\n"]},"metadata":{},"sourceType":"module"}