{"ast":null,"code":"//const { combineReducers } = require(\"redux\")\nimport * as actions from './actions';\nimport { combineReducers } from 'redux';\nvar iniState = {\n  items: [],\n  filter: null,\n  searchWord: null,\n  order: null,\n  isFetching: false,\n  fetchingError: {\n    status: null\n  }\n};\nvar rootReducer = combineReducers({\n  filter: filterReducer,\n  searchWord: searchWordReducer,\n  order: orderReducer,\n  isFetching: fetchingReducer,\n  items: itemsReducer,\n  fetchingError: fetchingErrorReducer\n});\nexport default rootReducer;\n\nfunction filterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iniState.filter;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === actions.SET_FILTER) {\n    return action.filter;\n  }\n\n  return state;\n}\n\nfunction searchWordReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iniState.searchWord;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('ACTION', action);\n\n  if (action.type === actions.SET_WORD) {\n    return action.word;\n  }\n\n  return state;\n}\n\nfunction orderReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iniState.order;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === actions.SET_ORDER) {\n    return action.order;\n  }\n\n  return state;\n}\n\nfunction fetchingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iniState.isFetching;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.SET_IS_FETCHING:\n      return true;\n\n    case actions.SET_IS_NOT_FETCHING:\n      return false;\n\n    default:\n      return state;\n  }\n}\n\nfunction itemsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iniState.items;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.ADD_ITEMS:\n      return state.concat(action.items);\n\n    case actions.RESET_ITEMS:\n      return action.items;\n\n    default:\n      return state;\n  }\n}\n\nfunction fetchingErrorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iniState.fetchingError;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === actions.SET_FETCHING_ERROR) {\n    return action.error;\n  }\n\n  return state;\n}","map":null,"metadata":{},"sourceType":"module"}